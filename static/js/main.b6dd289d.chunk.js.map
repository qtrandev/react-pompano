{"version":3,"sources":["InspectionDataSample.csv","reducers/items.js","actions/index.js","reducers/visibilityFilter.js","reducers/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddItem.js","components/Item.js","components/ItemList.js","containers/VisibleItemList.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","items","state","action","type","id","text","completed","map","item","nextItemId","addItem","VisibilityFilters","visibilityFilter","filter","combineReducers","Link","active","children","onClick","disabled","style","marginLeft","connect","ownProps","dispatch","Footer","FilterLink","input","csvFilePath","require","Papa","parse","header","download","complete","results","file","i","data","length","InspectionCodeDesc","Address","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","database","ref","once","then","sections","console","log","JSON","stringify","child","val","catch","error","onSubmit","e","preventDefault","value","trim","node","Item","textDecoration","ItemList","toggleItem","key","getVisibleItems","t","Error","App","VisibleItemList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","store","createStore","rootReducer","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b6dd289d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/InspectionDataSample.23abced9.csv\";","const items = (state = [], action) => {\n    switch (action.type) {\n      case 'ADD_ITEM':\n        return [\n          {\n            id: action.id,\n            text: action.text,\n            completed: false\n          },\n          ...state\n        ]\n      case 'TOGGLE_ITEM':\n        return state.map(item =>\n          (item.id === action.id)\n            ? {...item, completed: !item.completed}\n            : item\n        )\n      default:\n        return state\n    }\n  }\n  \nexport default items","let nextItemId = 0\nexport const addItem = text => ({\n  type: 'ADD_ITEM',\n  id: nextItemId++,\n  text\n})\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter\n})\n\nexport const toggleItem = id => ({\n  type: 'TOGGLE_ITEM',\n  id\n})\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n}","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter","import { combineReducers } from 'redux'\nimport items from './items'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n  items,\n  visibilityFilter\n})","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ active, children, onClick }) => (\n  <button\n     onClick={onClick}\n     disabled={active}\n     style={{\n         marginLeft: '4px',\n     }}\n  >\n    {children}\n  </button>\n)\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Link","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)","import React from 'react'\nimport FilterLink from '../containers/FilterLink'\nimport { VisibilityFilters } from '../actions'\n\nconst Footer = () => (\n  <div>\n    <span>Show: </span>\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>\n      All\n    </FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\n      Active\n    </FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\n      Completed\n    </FilterLink>\n  </div>\n)\n\nexport default Footer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addItem } from '../actions'\nimport Papa from 'papaparse'\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst AddItem = ({ dispatch }) => {\n  let input\n  let database\n\n  // Load sample data\n  const csvFilePath = require(\"../InspectionDataSample.csv\")\n  Papa.parse(csvFilePath, {\n    header: true,\n    download: true,\n    complete: function(results, file) {\n      if (results) {\n        //console.log (\"Results: \"+JSON.stringify(results.data));\n        for (var i = 0; i < results.data.length; i++) {\n          dispatch(addItem(results.data[i].InspectionCodeDesc+\" - \"+results.data[i].Address))\n        }\n      }\n    },\n  })\n\n  var config = {\n    apiKey: \"AIzaSyBi0nYDoBipKq49lyDra1j5vhHnUF5-vLI\",\n    authDomain: \"react-pompano.firebaseapp.com\",\n    databaseURL: \"https://react-pompano.firebaseio.com\",\n    projectId: \"react-pompano\",\n  };\n  firebase.initializeApp(config);\n  database = firebase.database();\n  database.ref('/').once('value')\n    .then(sections => {\n        console.log(\"Retrieved item from Firebase: \"+JSON.stringify(sections));\n        dispatch(addItem(sections.child(\"test\").val()));\n    })\n    .catch(error => {\n      console.log(\"Got error from Firebase: \"+JSON.stringify(error));\n    });\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          if (!input.value.trim()) {\n            return\n          }\n          dispatch(addItem(input.value))\n          input.value = ''\n        }}\n      >\n        <input ref={node => input = node} />\n        <button type=\"submit\">\n          Add\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default connect()(AddItem)","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Item = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={ {\n      textDecoration: completed ? 'line-through' : 'none'\n    }}\n  >\n    {text}\n  </li>\n)\n\nItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default Item","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Item from './Item'\n\nconst ItemList = ({ items, toggleItem }) => (\n  <ul>\n    {items.map(item =>\n      <Item\n        key={item.id}\n        {...item}\n        onClick={() => toggleItem(item.id)}\n      />\n    )}\n  </ul>\n)\n\nItemList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  toggleItem: PropTypes.func.isRequired\n}\n\nexport default ItemList","import { connect } from 'react-redux'\nimport { toggleItem } from '../actions'\nimport ItemList from '../components/ItemList'\nimport { VisibilityFilters } from '../actions'\n\nconst getVisibleItems = (items, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return items\n    case VisibilityFilters.SHOW_COMPLETED:\n      return items.filter(t => t.completed)\n    case VisibilityFilters.SHOW_ACTIVE:\n      return items.filter(t => !t.completed)\n    default:\n      throw new Error('Unknown filter: ' + filter)\n  }\n}\n\nconst mapStateToProps = state => ({\n  items: getVisibleItems(state.items, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  toggleItem: id => dispatch(toggleItem(id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ItemList)\n","import React from 'react'\nimport Footer from './components/Footer'\nimport AddItem from './containers/AddItem'\nimport VisibleItemList from './containers/VisibleItemList'\nimport './App.css';\n\nconst App = () => (\n  <div>\n    <h1>Pompano Beach Inspectors</h1>\n    <AddItem />\n    <VisibleItemList />\n    <Footer />\n  </div>\n)\n\nexport default App","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}